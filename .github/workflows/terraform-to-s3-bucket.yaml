name: Deploy website assets to S3

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  terraform:
    runs-on: ubuntu-latest

    env:
      TF_VAR_region: ${{ secrets.TF_VAR_region }}
      TF_VAR_domain_name: ${{ secrets.TF_VAR_domain_name }}
      TF_VAR_hosted_zone: ${{ secrets.TF_VAR_hosted_zone }}
      TF_VAR_web_assets_bucket: ${{ secrets.TF_VAR_WEB_ASSETS_BUCKET }}
    
    outputs:
      cdn_id: ${{ steps.get_cdn_id.outputs.cdn_id }}

    steps:
      - name: Checkout source
        uses: actions/checkout@v3
      
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false
      
      - name: Configure AWS credentials for Terraform
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2

      - name: Terraform Init
        run: terraform init
        working-directory: terraform
      
      - name: Terraform Validate
        run: terraform validate
        working-directory: terraform

      - name: Terraform Plan
        run: terraform plan -out=tfplan
        working-directory: terraform

      - name: Terraform Apply
        id: tf
        run: terraform apply -auto-approve tfplan
        working-directory: terraform
      
      - name: Get CDN Distribution ID
        id: get_cdn_id
        working-directory: terraform
        run: |
          CLOUDFRONT_DISTRO_ID=$(terraform output -raw cdn_distribution_id)
          echo "cdn_id=${CLOUDFRONT_DISTRO_ID}" >> $GITHUB_OUTPUT
        
  deploy:
    needs: terraform
    runs-on: ubuntu-latest

    env:
      WEB_ASSETS_S3_BUCKET_NAME: ${{ vars.WEB_ASSETS_S3_BUCKET_NAME }}
      CDN_ID: ${{ needs.terraform.outputs.cdn_id }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    
    - name: Configure AWS credentials for S3 deployment
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-2

    - name: Sync website to S3
      run: |
        aws s3 sync website/ s3://$WEB_ASSETS_S3_BUCKET_NAME  \
          --delete
    
    - name: Invalidate CloudFront Cache
      run: |
        aws cloudfront create-invalidation \
          --distribution-id ${{ needs.terraform.outputs.cdn_id }} \
          --paths "/*"